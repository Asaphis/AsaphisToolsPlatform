 'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import { usePathname } from 'next/navigation';
import { SearchBar } from '@/components/ui/SearchBar';
import { ThemeToggle } from '@/components/ui/ThemeToggle';
import { Button } from '@/components/ui/button';

type Category = { id: string; name: string };

export function Header() {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [categories, setCategories] = useState<Category[]>([]);
  const pathname = usePathname();

  useEffect(() => {
    let cancelled = false;
    const load = async () => {
      try {
        const base = process.env.NEXT_PUBLIC_API_URL || '';
        const url = base.startsWith('http') ? `${base}/categories` : '/api/categories';
        const res = await fetch(url, { cache: 'no-store' });
        if (!res.ok) return;
        const json = await res.json();
        const list = (json.categories || []).map((c: any) => ({ id: c.slug || c.id, name: c.name }));
        if (!cancelled) setCategories(list);
      } catch {}
    };
    load();
    return () => { cancelled = true; };
  }, []);

  const navigation = [
    { name: 'Home', href: '/', current: pathname === '/' },
    { name: 'All Tools', href: '/', current: pathname === '/' },
    { name: 'About', href: '/about', current: pathname === '/about' },
    { name: 'Help', href: '/help', current: pathname === '/help' },
    { name: 'Contact', href: '/contact', current: pathname === '/contact' },
  ];

  return (
    <header className="sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
      <div className="container mx-auto flex h-16 items-center justify-between px-4 md:px-6 lg:px-8">
        {/* Logo */}
        <Link href="/" className="flex items-center gap-2 hover-elevate rounded-md px-2 py-1">
          <span className="relative inline-flex items-center justify-center w-8 h-8 rounded-md overflow-hidden">
            <span className="absolute inset-0 bg-gradient-to-br from-purple-600 to-purple-700" />
            <span className="relative text-white font-bold text-lg">A</span>
          </span>
          <span className="font-bold text-xl">AsaphisTool</span>
        </Link>

        {/* Desktop Navigation */}
        <nav className="hidden md:flex items-center gap-6">
          {navigation.map((item) => (
            <Link
              key={item.name}
              href={item.href}
              className={`text-sm font-medium transition-colors ${
                item.current ? 'text-foreground' : 'text-foreground/80 hover:text-foreground'
              }`}
            >
              {item.name}
            </Link>
          ))}
        </nav>

        {/* Search Bar - Hidden on mobile */}
        <div className="hidden lg:block flex-1 max-w-md mx-6">
          <SearchBar />
        </div>

        {/* Right side actions */}
        <div className="flex items-center gap-3">
          <ThemeToggle />
          <Button className="hidden md:inline-flex bg-gradient-to-r from-purple-600 to-purple-700" asChild>
            <Link href="/tools">Get Started</Link>
          </Button>
          {/* Mobile menu button */}
          <button
            type="button"
            className="md:hidden inline-flex items-center justify-center p-2 hover-elevate rounded-md"
            onClick={() => setIsMenuOpen(!isMenuOpen)}
            aria-label="Toggle menu"
          >
            <svg className={`${isMenuOpen ? 'hidden' : 'block'} h-6 w-6`} fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
            </svg>
            <svg className={`${isMenuOpen ? 'block' : 'hidden'} h-6 w-6`} fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
      </div>

      {/* Mobile menu */}
      <div className={`md:hidden ${isMenuOpen ? 'block' : 'hidden'}`}>
        <div className="px-4 py-4 border-t">
          <div className="mb-4"><SearchBar /></div>
          {navigation.map((item) => (
            <Link
              key={item.name}
              href={item.href}
              className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${
                item.current ? 'bg-accent text-foreground' : 'text-foreground/80 hover:text-foreground hover:bg-accent'
              }`}
              onClick={() => setIsMenuOpen(false)}
            >
              {item.name}
            </Link>
          ))}
          <div className="mt-4">
            <Button className="w-full bg-gradient-to-r from-purple-600 to-purple-700" asChild>
              <Link href="/tools">Get Started</Link>
            </Button>
          </div>
        </div>
      </div>
    </header>
  );
}
